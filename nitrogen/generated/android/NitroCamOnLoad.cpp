///
/// NitroCamOnLoad.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2025 Marc Rousavy @ Margelo
///

#ifndef BUILDING_NITROCAM_WITH_GENERATED_CMAKE_PROJECT
#error NitroCamOnLoad.cpp is not being built with the autogenerated CMakeLists.txt project. Is a different CMakeLists.txt building this?
#endif

#include "NitroCamOnLoad.hpp"

#include <jni.h>
#include <fbjni/fbjni.h>
#include <NitroModules/HybridObjectRegistry.hpp>

#include "JHybridNitroCamSpec.hpp"
#include "views/JHybridNitroCamStateUpdater.hpp"
#include <NitroModules/JNISharedPtr.hpp>
#include <NitroModules/DefaultConstructableObject.hpp>

namespace margelo::nitro::nitrocam {

int initialize(JavaVM* vm) {
  using namespace margelo::nitro;
  using namespace margelo::nitro::nitrocam;
  using namespace facebook;

  return facebook::jni::initialize(vm, [] {
    // Register native JNI methods
    margelo::nitro::nitrocam::JHybridNitroCamSpec::registerNatives();
    margelo::nitro::nitrocam::views::JHybridNitroCamStateUpdater::registerNatives();

    // Register Nitro Hybrid Objects
    HybridObjectRegistry::registerHybridObjectConstructor(
      "NitroCam",
      []() -> std::shared_ptr<HybridObject> {
        static DefaultConstructableObject<JHybridNitroCamSpec::javaobject> object("com/nitrocam/HybridNitroCam");
        auto instance = object.create();
        auto globalRef = jni::make_global(instance);
        return JNISharedPtr::make_shared_from_jni<JHybridNitroCamSpec>(globalRef);
      }
    );
  });
}

} // namespace margelo::nitro::nitrocam
